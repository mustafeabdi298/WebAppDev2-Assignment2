[{"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/index.js":"1","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/movieDetailsPage.js":"2","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/homePage.js":"3","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/movieReviewPage.js":"4","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/favoriteMoviesPage.js":"5","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/addMovieReviewPage.js":"6","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/upcomingMoviesPage.js":"7","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/showListPage.js":"8","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/showDetailsPage.js":"9","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/addShowReviewPage.js":"10","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/favoriteShowsPage.js":"11","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/signupPage.js":"12","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/loginPage.js":"13","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/wishlistPage.js":"14","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/showReviewPage.js":"15","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/contexts/moviesContext.js":"16","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/contexts/authContext.js":"17","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/privateRoute/privateRoute.js":"18","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/siteHeader/index.js":"19","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/addToFavorites.js":"20","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/removeFromFavorites.js":"21","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/hooks/useMovie.js":"22","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/addToShowFavorites.js":"23","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/writeReview.js":"24","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/removeFromWishlist.js":"25","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/api/tmdb-api.js":"26","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/addToWishlist.js":"27","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/api/movie-api.js":"28","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/writeShowReview.js":"29","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/removeFromShowFavorites.js":"30","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieDetails/index.js":"31","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateMoviePage/index.js":"32","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateMovieListPage/index.js":"33","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/spinner/index.js":"34","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/reviewForm/index.js":"35","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showReviewForm/index.js":"36","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showReview/index.js":"37","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateShowListPage/index.js":"38","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateShowPage/index.js":"39","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieReview/index.js":"40","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showDetails/index.js":"41","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/headerMovieList/index.js":"42","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieReviews/index.js":"43","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/filterMoviesCard/index.js":"44","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieList/index.js":"45","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/headerMovie/index.js":"46","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showList/index.js":"47","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/headerShowList/index.js":"48","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/filterShowsCard/index.js":"49","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showReviews/index.js":"50","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showHeader/index.js":"51","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/util.js":"52","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieCard/index.js":"53","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showCard/index.js":"54"},{"size":2967,"mtime":1640989447801,"results":"55","hashOfConfig":"56"},{"size":938,"mtime":1640989447807,"results":"57","hashOfConfig":"56"},{"size":963,"mtime":1640989447805,"results":"58","hashOfConfig":"56"},{"size":444,"mtime":1640989447808,"results":"59","hashOfConfig":"56"},{"size":895,"mtime":1640989447804,"results":"60","hashOfConfig":"56"},{"size":809,"mtime":1641050039637,"results":"61","hashOfConfig":"56"},{"size":992,"mtime":1640989447811,"results":"62","hashOfConfig":"56"},{"size":970,"mtime":1640989447809,"results":"63","hashOfConfig":"56"},{"size":884,"mtime":1640989447809,"results":"64","hashOfConfig":"56"},{"size":760,"mtime":1640989447803,"results":"65","hashOfConfig":"56"},{"size":921,"mtime":1640989447805,"results":"66","hashOfConfig":"56"},{"size":1518,"mtime":1640989447811,"results":"67","hashOfConfig":"56"},{"size":1292,"mtime":1640989447806,"results":"68","hashOfConfig":"56"},{"size":763,"mtime":1640989447812,"results":"69","hashOfConfig":"56"},{"size":417,"mtime":1640989447810,"results":"70","hashOfConfig":"56"},{"size":1951,"mtime":1640989447626,"results":"71","hashOfConfig":"56"},{"size":4820,"mtime":1640989447626,"results":"72","hashOfConfig":"56"},{"size":617,"mtime":1640989447603,"results":"73","hashOfConfig":"56"},{"size":3878,"mtime":1640989447617,"results":"74","hashOfConfig":"56"},{"size":761,"mtime":1640989447580,"results":"75","hashOfConfig":"56"},{"size":808,"mtime":1640989447583,"results":"76","hashOfConfig":"56"},{"size":328,"mtime":1640989447649,"results":"77","hashOfConfig":"56"},{"size":787,"mtime":1640989447581,"results":"78","hashOfConfig":"56"},{"size":420,"mtime":1640989447585,"results":"79","hashOfConfig":"56"},{"size":800,"mtime":1640989447584,"results":"80","hashOfConfig":"56"},{"size":4015,"mtime":1640989447579,"results":"81","hashOfConfig":"56"},{"size":764,"mtime":1640989447582,"results":"82","hashOfConfig":"56"},{"size":5032,"mtime":1640989447578,"results":"83","hashOfConfig":"56"},{"size":428,"mtime":1640989447586,"results":"84","hashOfConfig":"56"},{"size":821,"mtime":1640989447583,"results":"85","hashOfConfig":"56"},{"size":3015,"mtime":1640989447597,"results":"86","hashOfConfig":"56"},{"size":1912,"mtime":1640989447621,"results":"87","hashOfConfig":"56"},{"size":3274,"mtime":1640989447620,"results":"88","hashOfConfig":"56"},{"size":562,"mtime":1640989447619,"results":"89","hashOfConfig":"56"},{"size":4976,"mtime":1640989447605,"results":"90","hashOfConfig":"56"},{"size":4997,"mtime":1640989447614,"results":"91","hashOfConfig":"56"},{"size":197,"mtime":1640989447613,"results":"92","hashOfConfig":"56"},{"size":3127,"mtime":1640989447623,"results":"93","hashOfConfig":"56"},{"size":1736,"mtime":1640989447624,"results":"94","hashOfConfig":"56"},{"size":215,"mtime":1640989447600,"results":"95","hashOfConfig":"56"},{"size":2578,"mtime":1640989447608,"results":"96","hashOfConfig":"56"},{"size":1223,"mtime":1640989447591,"results":"97","hashOfConfig":"56"},{"size":2980,"mtime":1640989447601,"results":"98","hashOfConfig":"56"},{"size":5895,"mtime":1640989447587,"results":"99","hashOfConfig":"56"},{"size":372,"mtime":1640989447598,"results":"100","hashOfConfig":"56"},{"size":1474,"mtime":1640989447589,"results":"101","hashOfConfig":"56"},{"size":362,"mtime":1640989447611,"results":"102","hashOfConfig":"56"},{"size":1180,"mtime":1640989447592,"results":"103","hashOfConfig":"56"},{"size":5836,"mtime":1640989447588,"results":"104","hashOfConfig":"56"},{"size":2805,"mtime":1640989447616,"results":"105","hashOfConfig":"56"},{"size":1467,"mtime":1640989447610,"results":"106","hashOfConfig":"56"},{"size":245,"mtime":1640989447839,"results":"107","hashOfConfig":"56"},{"size":3594,"mtime":1640989447594,"results":"108","hashOfConfig":"56"},{"size":3013,"mtime":1640989447607,"results":"109","hashOfConfig":"56"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"113"},"1jzb2fu",{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"113"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"113"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"113"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"127","messages":"128","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"113"},{"filePath":"130","messages":"131","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"113"},{"filePath":"133","messages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"135","messages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"137","messages":"138","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"113"},{"filePath":"140","messages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"113"},{"filePath":"143","messages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"145","messages":"146","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"113"},{"filePath":"148","messages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"150","messages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"152","messages":"153","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"154","usedDeprecatedRules":"113"},{"filePath":"155","messages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"157","messages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"159","usedDeprecatedRules":"113"},{"filePath":"160","messages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"162","messages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"172","messages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"174","messages":"175","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"180","messages":"181","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"182","messages":"183","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"184","usedDeprecatedRules":"113"},{"filePath":"185","messages":"186","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"187","messages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"191","messages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"113"},{"filePath":"194","messages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"113"},{"filePath":"197","messages":"198","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"199","messages":"200","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"203","messages":"204","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"205","messages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"113"},{"filePath":"208","messages":"209","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"210","messages":"211","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"212","messages":"213","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"214","messages":"215","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"218","messages":"219","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"220","messages":"221","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"226","messages":"227","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"228","messages":"229","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"113"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"235","usedDeprecatedRules":"113"},"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/index.js",["236"],"import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Route, Redirect, Switch, Link } from \"react-router-dom\";\nimport HomePage from \"./pages/homePage\";\nimport MoviePage from \"./pages/movieDetailsPage\";\nimport FavoriteMoviesPage from \"./pages/favoriteMoviesPage\";\nimport MovieReviewPage from \"./pages/movieReviewPage\";\nimport SiteHeader from \"./components/siteHeader\";\nimport UpcomingMoviesPage from \"./pages/upcomingMoviesPage\";\nimport { QueryClientProvider, QueryClient } from \"react-query\";\nimport { ReactQueryDevtools } from 'react-query/devtools';\nimport MoviesContextProvider from \"./contexts/moviesContext\";\nimport addMovieReviewPage from \"./pages/addMovieReviewPage\";\nimport ShowListPage from \"./pages/showListPage\";\nimport ShowDetailsPage from \"./pages/showDetailsPage\";\nimport FavoriteShowsPage from \"./pages/favoriteShowsPage\";\nimport ShowReviewPage from \"./pages/showReviewPage\";\nimport AddShowReviewPage from \"./pages/addShowReviewPage\";\nimport WishlistPage from \"./pages/wishlistPage\";\nimport LoginPage from \"./pages/loginPage\";\nimport AuthProvider from \"./contexts/authContext\";\nimport PrivateRoute from \"./components/privateRoute/privateRoute\";\nimport SignupPage from \"./pages/signupPage\";\n\nconst queryClient = new QueryClient({\n  defaultOptions: {\n    queries: {\n      staleTime: 360000,\n      refetchInterval: 360000, \n      refetchOnWindowFocus: false\n    },\n  },\n});\n\nconst App = () => {\n  return (\n    <QueryClientProvider client={queryClient}>\n    <BrowserRouter>\n    <AuthProvider>\n    <SiteHeader />\n    <MoviesContextProvider>\n      {\"\"}\n      <Switch>\n        <Route exact path = \"/signup\" component={SignupPage} />\n        <Route exact path = \"/login\" component={LoginPage} />\n        <PrivateRoute exact path = \"/movies/wishlist\" component={WishlistPage} />\n        <PrivateRoute exact path = \"/tv/reviews/form\" component={AddShowReviewPage} />\n        <PrivateRoute exact path = \"/tv/reviews/:id\" component={ShowReviewPage} />\n        <PrivateRoute exact path = \"/tv/popular\" component={ShowListPage} />\n        <PrivateRoute exact path = \"/tv/popular/:id\" component = {ShowDetailsPage} />\n        <PrivateRoute exact path = \"/tv/favorites\" component = {FavoriteShowsPage} />\n        <PrivateRoute exact path = \"/reviews/form\" component = {addMovieReviewPage} />\n        <PrivateRoute exact path=\"/movies/upcoming\" component={UpcomingMoviesPage} />\n        <PrivateRoute path=\"/movies/reviews/:id\" component={MovieReviewPage}/>\n        <PrivateRoute exact path=\"/movies/favorites\" component={FavoriteMoviesPage} />\n        <PrivateRoute path=\"/movies/:id\" component={MoviePage} />\n        <PrivateRoute exact path=\"/\" component={HomePage} />\n        <Redirect from=\"*\" to=\"/\" />\n      </Switch>\n    </MoviesContextProvider>\n    </AuthProvider>\n    </BrowserRouter>\n    <ReactQueryDevtools initialIsOpen={false}/>\n    </QueryClientProvider>\n  );\n};\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n",["237","238"],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/movieDetailsPage.js",["239"],"import React from \"react\";\nimport { withRouter } from \"react-router-dom\";\nimport MovieDetails from \"../components/movieDetails\";\nimport PageTemplate from \"../components/templateMoviePage\";\nimport useMovie from \"../hooks/useMovie\";\nimport {getMovie} from \"../api/tmdb-api\";\nimport { useQuery } from \"react-query\";\nimport Spinner from \"../components/spinner\";\n\nconst MovieDetailsPage = (props) => {\n  const { id } = props.match.params\n\n  const { data: movie, error, isLoading, isError } = useQuery(\n    [\"movie\", { id: id }],\n    getMovie\n  );\n\n  if (isLoading) {\n    return <Spinner />;\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>;\n  }\n  return (\n    <>\n      {movie ? (\n        <>\n          <PageTemplate movie={movie}>\n            <MovieDetails movie={movie} />\n          </PageTemplate>\n        </>\n      ) : (\n        <p>Waiting for movie details</p>\n      )}\n    </>\n  );\n};\n\nexport default withRouter(MovieDetailsPage);","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/homePage.js",["240"],"import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport {getMovies} from '../api/tmdb-api'\nimport AddToFavoritesIcon from \"../components/cardIcons/addToFavorites\";\n\nconst HomePage = (props) => {\n  const {  data, error, isLoading, isError }  = useQuery('discover', getMovies)\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>\n  }  \n  const movies = data.results;\n\n  // Redundant, but necessary to avoid app crashing.\n  const favorites = movies.filter(m => m.favorite)\n  localStorage.setItem('favorites', JSON.stringify(favorites))\n  const addToFavorites = (movieId) => true \n\n  return (\n    <PageTemplate\n      title=\"Discover Movies\"\n      movies={movies}\n      action={(movie) => {\n        return <AddToFavoritesIcon movie={movie}/>\n      }}\n    />    \n  );\n};\n\nexport default HomePage;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/movieReviewPage.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/favoriteMoviesPage.js",["241","242","243","244"],"import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromFavorites from \"../components/cardIcons/removeFromFavorites\";\nimport WriteReview from \"../components/cardIcons/writeReview\";\n\nconst FavoriteMoviesPage = () => {\n  const {favorites} = useContext(AuthContext);\n  \n  return (\n    <PageTemplate\n      title=\"Favourite Movies\"\n      movies={favorites}\n      action={(movie) => {\n        return(\n          <>\n          <RemoveFromFavorites movie = {movie}/>\n          <WriteReview movie = {movie} />\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default FavoriteMoviesPage;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/addMovieReviewPage.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/upcomingMoviesPage.js",["245"],"import React from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport {getUpcomingMovies} from '../api/tmdb-api'\nimport AddToWishlistIcon from \"../components/cardIcons/addToWishlist\";\n\nconst UpcomingMoviesPage = (props) => {\n  const {  data, error, isLoading, isError }  = useQuery('upcoming', getUpcomingMovies)\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>\n  }  \n  const movies = data.results;\n\n  // Redundant, but necessary to avoid app crashing.\n  const wishlist = movies.filter(m => m.favorite)\n  localStorage.setItem('wishlist', JSON.stringify(wishlist))\n  const addToWishlist = (movieId) => true \n\n  return (\n    <PageTemplate\n      title=\"Upcoming Movies\"\n      movies={movies}\n      action={(movie) => {\n        return <AddToWishlistIcon movie={movie}/>\n      }}\n    />    \n  );\n};\n\nexport default UpcomingMoviesPage;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/showListPage.js",["246"],"import React from \"react\";\nimport PageTemplate from \"../components/templateShowListPage\";\nimport { useQuery } from 'react-query'\nimport Spinner from '../components/spinner'\nimport {getShows} from '../api/tmdb-api'\nimport AddToShowFavoritesIcon from \"../components/cardIcons/addToShowFavorites\";\n\nconst ShowListPage = (props) => {\n  const {  data, error, isLoading, isError }  = useQuery('shows', getShows)\n\n  if (isLoading) {\n    return <Spinner />\n  }\n\n  if (isError) {\n    return <h1>{error.message}</h1>\n  }  \n  const shows = data.results;\n\n  // Redundant, but necessary to avoid app crashing.\n  const favorites = shows.filter(m => m.favorite)\n  localStorage.setItem('favorites', JSON.stringify(favorites))\n  const addToFavorites = (showId) => true \n\n  return (\n    <PageTemplate\n      title=\"Popular Tv Shows\"\n      shows={shows}\n      action={(show) => {\n        return <AddToShowFavoritesIcon show={show}/>\n      }}\n    />    \n  );\n};\n\nexport default ShowListPage;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/showDetailsPage.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/addShowReviewPage.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/favoriteShowsPage.js",["247","248","249","250"],"import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateShowListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { useQueries } from \"react-query\";\nimport { getShow } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromShowFavorites from \"../components/cardIcons/removeFromShowFavorites\";\nimport WriteShowReviewIcon from \"../components/cardIcons/writeShowReview\";\n\nconst FavoriteMoviesPage = () => {\n  const {showFavorites} = useContext(AuthContext);\n\n  return (\n    <PageTemplate\n      title=\"Favourite Shows\"\n      shows={showFavorites}\n      action={(show) => {\n        return (\n          <>\n          <RemoveFromShowFavorites show={show} />\n          <WriteShowReviewIcon show={show} />\n          </>\n        )\n      }}\n    />\n  );\n};\n\nexport default FavoriteMoviesPage;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/signupPage.js",["251"],"import React, { useContext, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { AuthContext } from '../contexts/authContext';\nimport { Link } from \"react-router-dom\";\n\nconst LoginPage = props => {\n  const context = useContext(AuthContext)\n  const [userName, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordAgain, setPasswordAgain] = useState(\"\");\n  //const [fullName, setFullName] = useState(\"\");\n\n  const signup = () => {\n    if(passwordAgain === password){\n      if(context.register(userName, password)){\n        context.authenticate(userName, password);\n      }\n    }\n  };\n\n  // Set 'from' to path where browser is redirected after a successful login.\n  // Either / or the protected path user tried to access.\n  const { from } = props.location.state || { from: { pathname: \"/\" } };\n\n  if (context.isAuthenticated === true) {\n    return <Redirect to={from} />;\n  }\n  return (\n    <>\n      <h2>Create A New Account</h2>\n      <input id=\"username\" placeholder=\"user name\" onChange={e => {\n        setUserName(e.target.value);\n      }}></input><br />\n      <input id=\"password\" type=\"password\" placeholder=\"password\" onChange={e => {\n        setPassword(e.target.value);\n      }}></input><br />\n      <input id=\"passwordAgain\" type=\"password\" placeholder=\"repeat password\" onChange={e => {\n        setPasswordAgain(e.target.value);\n      }}></input><br />\n      <button onClick={signup}>Sign Up</button>\n    </>\n  );\n};\n\nexport default LoginPage;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/loginPage.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/wishlistPage.js",["252","253","254","255"],"import React, { useContext } from \"react\";\nimport PageTemplate from \"../components/templateMovieListPage\";\nimport { MoviesContext } from \"../contexts/moviesContext\";\nimport { AuthContext } from \"../contexts/authContext\";\nimport { useQueries } from \"react-query\";\nimport { getMovie } from \"../api/tmdb-api\";\nimport Spinner from '../components/spinner'\nimport RemoveFromWishlist from \"../components/cardIcons/removeFromWishlist\";\n\nconst WishlistPage = () => {\n  const {wishlist} = useContext(AuthContext);\n\n  return (\n    <PageTemplate\n      title=\"Wishlist\"\n      movies={wishlist}\n      action={(movie) => {\n        return(\n          <>\n          <RemoveFromWishlist movie = {movie}/>\n          </>\n        );\n      }}\n    />\n  );\n};\n\nexport default WishlistPage;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/pages/showReviewPage.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/contexts/moviesContext.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/contexts/authContext.js",["256"],"import React, { useState, createContext } from \"react\";\nimport { login, signup, \n  addFavouriteMovie, getFavouriteMovies, removeFavouriteMovie, \n  addWishlistMovie, getWishlistMovies, removeWishlistMovie,\n  addShowFavouriteMovie, getShowFavouriteMovies, removeShowFavouriteMovie, \n  addMovieReview, addShowReview, getMovieReviews, getShowReviews\n} from \"../api/movie-api\";\n\nexport const AuthContext = createContext(null);\n\nconst AuthContextProvider = (props) => {\n  const existingToken = localStorage.getItem(\"token\");\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [authToken, setAuthToken] = useState(existingToken);\n  const [userName, setUserName] = useState(\"\");\n  const [favorites, setFavorites] = useState([]);\n  const [wishlist, setWishlist] = useState([]);\n  const [showFavorites, setShowFavorites] = useState([]);\n  const [myReviews, setMyReviews] = useState({});\n  const [myShowReviews, setMyShowReviews] = useState({});\n  const [specificMovieReviews, setSpecificMovieReviews] = useState({});\n  const [specificShowReviews, setSpecificShowReviews] = useState({});\n\n  //Function to put JWT token in local storage.\n  const setToken = (data) => {\n    localStorage.setItem(\"token\", data);\n    setAuthToken(data);\n  }\n\n  const authenticate = async (username, password) => {\n    const result = await login(username, password);\n    if (result.token) {\n      setToken(result.token)\n      setIsAuthenticated(true);\n      setUserName(username);\n      setFavorites(await getFavouriteMovies(username));\n      setWishlist(await getWishlistMovies(username));\n      setShowFavorites(await getShowFavouriteMovies(username));\n    }\n  };\n\n  const getMyMovieReviews = async (movieId) => {\n    setSpecificMovieReviews(await getMovieReviews(movieId));\n  }\n\n  const getMyShowReviews = async (showId) => {\n    setSpecificShowReviews(await getShowReviews(showId));\n  }\n\n  const addToFavorites = (movie) => {\n    if(!favorites.includes(movie)){\n    setFavorites([...favorites, movie])\n    addFavouriteMovie(userName, movie.id);\n    }\n  };\n\n  const removeFromFavourites = (movie) => {    \n    if(favorites.includes(movie)){\n    const index = favorites.indexOf(movie);\n    favorites.splice(index, 1);\n    }\n    setFavorites([...favorites]);    \n    removeFavouriteMovie(userName, movie.id);\n  }\n\n  const addToWishlist = (movie) => {\n    if(!wishlist.includes(movie)){\n    setWishlist([...wishlist, movie])\n    addWishlistMovie(userName, movie.id);\n    }\n  };\n\n  const removeFromWishlist = (movie) => {    \n    if(wishlist.includes(movie)){\n    const index = wishlist.indexOf(movie);\n    wishlist.splice(index, 1);\n    }\n    setWishlist([...wishlist]);    \n    removeWishlistMovie(userName, movie.id);\n  }\n\n  const addToShowFavorites = (show) => {\n    if(!showFavorites.includes(show)){\n    setShowFavorites([...showFavorites, show])\n    addShowFavouriteMovie(userName, show.id);\n    }\n  };\n\n  const removeFromShowFavourites = (show) => {    \n    if(showFavorites.includes(show)){\n    const index = showFavorites.indexOf(show);\n    showFavorites.splice(index, 1);\n    }\n    setShowFavorites([...showFavorites]);    \n    removeShowFavouriteMovie(userName, show.id);\n  }\n\n  const addReview = (review) => {\n    setMyReviews({...myReviews, review})\n    console.info(\"1: \" + review.authorName + \"\\n2: \" +  review.text + \"\\n3: \" + review.rating + \"\\n4: \" + review.movieId)\n    addMovieReview(review.authorName, review.text, review.rating, review.movieId, userName)\n  };\n\n  const addReviewShow = (review) => {\n    setMyShowReviews({...myShowReviews, review})\n    console.info(\"1: \" + review.authorName + \"\\n2: \" +  review.text + \"\\n3: \" + review.rating + \"\\n4: \" + review.movieId)\n    addShowReview(review.authorName, review.text, review.rating, review.showId, userName)\n  }\n\n  const register = async (username, password) => {\n    const result = await signup(username, password);\n    console.log(result.code);\n    return (result.code === 201) ? true : false;\n  };\n\n  const signout = () => {\n    setTimeout(() => setIsAuthenticated(false), 100);\n    setUserName(\"\");\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isAuthenticated,\n        authenticate,\n        register,\n        signout,\n        userName,\n        addToFavorites,\n        removeFromFavourites,\n        favorites,\n        addToWishlist,\n        removeFromWishlist,\n        wishlist,\n        addToShowFavorites,\n        removeFromShowFavourites,\n        showFavorites,\n        addReview,\n        myReviews,\n        addReviewShow,\n        myShowReviews,\n        getMyMovieReviews,\n        specificMovieReviews,\n        setSpecificMovieReviews,\n        getMyShowReviews,\n        specificShowReviews,\n        setSpecificShowReviews\n      }}\n    >\n      {props.children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContextProvider;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/privateRoute/privateRoute.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/siteHeader/index.js",["257"],"import React, { useContext, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { useTheme } from \"@material-ui/core/styles\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport { AuthContext } from \"../../contexts/authContext\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  offset: theme.mixins.toolbar,\n}));\n\nconst SiteHeader = ( { history }) => {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = useState(null);\n  const open = Boolean(anchorEl);\n  const theme = useTheme();\n  const isMobile = useMediaQuery(theme.breakpoints.down(\"md\"));\n  const context = useContext(AuthContext);\n  const {userName} = useContext(AuthContext);\n\n  const menuOptions = [\n    { label: \"Home\", path: \"/\" },\n    { label: \"Upcoming\", path: \"/movies/upcoming\"},\n    { label: \"Popular Tv Shows\", path: \"/tv/popular\" },\n    { label: \"Favorites\", path: \"/movies/favorites\" },\n    { label: \"Wishlist\", path: \"/movies/wishlist\" },\n    { label: \"Favorite Tv Shows\", path: \"/tv/favorites\" },\n  ];\n\n  const handleMenuSelect = (pageURL) => {\n    history.push(pageURL);\n  };\n\n  const handleMenu = (event) => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  return (\n    <>\n      <AppBar position=\"fixed\" color=\"secondary\">\n        <Toolbar>\n          <Typography variant=\"h4\" className={classes.title}>\n            TMDB Client\n          </Typography>\n          <Typography variant=\"h5\" className={classes.title}>\n            Welcome {userName} &nbsp;\n            <button onClick={() => context.signout()}>Sign Out</button>\n          </Typography>\n          <Typography variant=\"h6\" className={classes.title}>\n            All you ever wanted to know about Movies!\n          </Typography>\n            {isMobile ? (\n              <>\n                <IconButton\n                  aria-label=\"menu\"\n                  aria-controls=\"menu-appbar\"\n                  aria-haspopup=\"true\"\n                  onClick={handleMenu}\n                  color=\"inherit\"\n                >\n                  <MenuIcon />\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                  keepMounted\n                  transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\",\n                  }}\n                  open={open}\n                  onClose={() => setAnchorEl(null)}\n                >\n                  {menuOptions.map((opt) => (\n                    <MenuItem\n                      key={opt.label}\n                      onClick={() => handleMenuSelect(opt.path)}\n                    >\n                      {opt.label}\n                    </MenuItem>\n                  ))}\n                </Menu>\n              </>\n            ) : (\n              <>\n                {menuOptions.map((opt) => (\n                  <Button\n                    key={opt.label}\n                    color=\"inherit\"\n                    onClick={() => handleMenuSelect(opt.path)}\n                  >\n                    {opt.label}\n                  </Button>\n                ))}\n              </>\n            )}\n        </Toolbar>\n      </AppBar>\n      <div className={classes.offset} />\n    </>\n  );\n};\n\nexport default withRouter(SiteHeader);\n","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/addToFavorites.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/removeFromFavorites.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/hooks/useMovie.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/addToShowFavorites.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/writeReview.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/removeFromWishlist.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/api/tmdb-api.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/addToWishlist.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/api/movie-api.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/writeShowReview.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/cardIcons/removeFromShowFavorites.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieDetails/index.js",["258"],"import React, {useState} from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport MonetizationIcon from \"@material-ui/icons/MonetizationOn\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { MovieSharp } from \"@material-ui/icons\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport MovieReviews from \"../movieReviews\";\n\nconst useStyles = makeStyles((theme) => ({\n\n    root: {\n      display: \"flex\",\n      justifyContent: \"center\",\n      flexWrap: \"wrap\",\n      listStyle: \"none\",\n      padding: theme.spacing(1.5),\n      margin: 0,\n    },\n    chip: {\n      margin: theme.spacing(0.5),\n    },\n    fab: {\n      position: \"fixed\",\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n\n  }));\n\n  const MovieDetails = ({movie}) => {\n    const classes = useStyles();\n    const [drawerOpen, setDrawerOpen] = useState(false);\n  \n    return (\n      <>\n        <Typography variant=\"h5\" component=\"h3\">\n          Overview\n        </Typography>\n  \n        <Typography variant=\"h6\" component=\"p\">\n          {movie.overview}\n        </Typography>\n  \n        <Paper component=\"ul\" className={classes.root}>\n          <li>\n            <Chip label=\"Genres\" className={classes.chip} color=\"primary\" />\n          </li>\n          {movie.genres.map((g) => (\n            <li key={g.name}>\n              <Chip label={g.name} className={classes.chip} />\n            </li>\n          ))}\n        </Paper>\n        <Paper component=\"ul\" className={classes.root}>\n          <Chip icon={<AccessTimeIcon />} label={`${movie.runtime} min.`} />\n          <Chip\n            icon={<MonetizationIcon />}\n            label={`${movie.revenue.toLocaleString()}`}\n          />\n          <Chip\n            icon={<StarRate />}\n            label={`${movie.vote_average} (${movie.vote_count}`}\n          />\n          <Chip label={`Released: ${movie.release_date}`} />\n        </Paper>\n        <Paper component = \"ul\" className = {classes.root}>\n          <li>\n            <Chip label = \"Production Countries\" className = {classes.chip} color = \"primary\" />\n          </li>\n          {movie.production_countries.map((c) => (\n            <li key = {c.name}>\n              <Chip label = {c.name} className = {classes.chip} />\n            </li>\n          ))}\n        </Paper>\n  \n        <Fab\n          color=\"secondary\"\n          variant=\"extended\"\n          onClick={() => setDrawerOpen(true)}\n          className={classes.fab}\n        >\n          <NavigationIcon />\n          Reviews\n        </Fab>\n        <Drawer anchor = \"top\" open = {drawerOpen} onClose = {() => setDrawerOpen(false)}>\n          <MovieReviews movie={movie}/>\n        </Drawer>\n        </>\n    );\n  };\n  \n  export default  MovieDetails ;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateMoviePage/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateMovieListPage/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/spinner/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/reviewForm/index.js",["259"],"import React, { useContext, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport useForm from \"react-hook-form\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { withRouter } from \"react-router-dom\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst ratings = [\n  {\n    value: 5,\n    label: \"Excellent\",\n  },\n  {\n    value: 4,\n    label: \"Good\",\n  },\n  {\n    value: 3,\n    label: \"Average\",\n  },\n  {\n    value: 2,\n    label: \"Poor\",\n  },\n  {\n    value: 0,\n    label: \"Terrible\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    \"& > * \": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  textField: {\n    width: \"40ch\",\n  },\n  submit: {\n    marginRight: theme.spacing(2),\n  },\n  snack: {\n    width: \"50%\",\n    \"& > * \": {\n      width: \"100%\",\n    },\n  },\n}));\n\nconst ReviewForm = ({ movie, history }) => {\n  const classes = useStyles();\n  const { register, handleSubmit, errors, reset } = useForm();\n  const context = useContext(AuthContext);\n  const [rating, setRating] = useState(3);\n  const [open, setOpen] = React.useState(false);\n  const {userName} = useContext(AuthContext);\n\n  const handleSnackClose = (event) => { \n    setOpen(false);\n    history.push(\"/movies/favorites\");\n  };\n\n  const handleRatingChange = (event) => {\n    setRating(event.target.value);\n  };\n\n  const onSubmit = (review) => {\n    review.movieId = movie.id;\n    review.rating = ratings.find(element => element.value === rating).label;\n    console.log(review);\n    context.addReview(review);\n    setOpen(true);   // NEW\n  };\n\n  return (\n    <Box component=\"div\" className={classes.root}>\n      <Typography component=\"h2\" variant=\"h3\">\n        Write a review\n      </Typography>\n      <Snackbar\n      className={classes.snack}\n      anchorOrigin={{vertical: \"top\", horizontal: \"right\"}}\n      open={open}\n      onClose={handleSnackClose}\n      >\n        <MuiAlert\n        severity=\"success\"\n        variant=\"filled\"\n        onClose={handleSnackClose}\n        >\n          <Typography variant=\"h4\">\n            Thank you for submitting a review\n          </Typography>\n          </MuiAlert>\n          </Snackbar>\n      <form\n        className={classes.form}\n        onSubmit={handleSubmit(onSubmit)}\n        noValidate\n      >\n        <TextField\n          className={classes.textField}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          id=\"author\"\n          label=\"Author's name\"\n          name=\"authorName\"\n          value = {userName}\n          inputProps={\n            {readOnly: true,}\n          }\n          inputRef={register({ required: \"Author name required\" })}\n        />\n        {errors.author && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.author.message}\n          </Typography>\n        )}\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"text\"\n          label=\"Review text\"\n          id=\"content\"\n          autoFocus\n          multiline\n          rows={10}\n          inputRef={register({\n            required: \"No review text\",\n            minLength: { value: 10, message: \"Review is too short\" },\n          })}\n        />\n        {errors.content && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.content.message}\n          </Typography>\n        )}\n        <TextField\n          id=\"select-rating\"\n          select\n          variant=\"outlined\"\n          label=\"Rating Select\"\n          value={rating}\n          onChange={handleRatingChange}\n          helperText=\"Don't forget your rating\"\n        >\n          {ratings.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <Box className={classes.buttons}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Submit\n          </Button>\n          <Button\n            type=\"reset\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n            onClick={() => {\n              reset({\n                author: \"\",\n                content: \"\",\n              });\n            }}\n          >\n            Reset\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default withRouter(ReviewForm);","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showReviewForm/index.js",["260"],"import React, { useContext, useState } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport useForm from \"react-hook-form\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { AuthContext } from \"../../contexts/authContext\";\nimport { withRouter } from \"react-router-dom\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport MuiAlert from \"@material-ui/lab/Alert\";\n\nconst ratings = [\n  {\n    value: 5,\n    label: \"Excellent\",\n  },\n  {\n    value: 4,\n    label: \"Good\",\n  },\n  {\n    value: 3,\n    label: \"Average\",\n  },\n  {\n    value: 2,\n    label: \"Poor\",\n  },\n  {\n    value: 0,\n    label: \"Terrible\",\n  },\n];\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    marginTop: theme.spacing(2),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  form: {\n    width: \"100%\",\n    \"& > * \": {\n      marginTop: theme.spacing(2),\n    },\n  },\n  textField: {\n    width: \"40ch\",\n  },\n  submit: {\n    marginRight: theme.spacing(2),\n  },\n  snack: {\n      width: \"50%\",\n      \"& > * \": {\n          width: \"100%\",\n      },\n  },\n}));\n\nconst ShowReviewForm = ({ show, history }) => {\n  const classes = useStyles();\n  const { register, handleSubmit, errors, reset } = useForm();\n  const context = useContext(AuthContext);\n  const [rating, setRating] = useState(3);\n  const [open, setOpen] = React.useState(false);\n  const {userName} = useContext(AuthContext);\n\n  const handleSnackClose = (event) => {\n      setOpen(false);\n      history.push(\"/shows/favorites\");\n  }\n\n  const handleRatingChange = (event) => {\n    setRating(event.target.value);\n  };\n\n  const onSubmit = (review) => {\n    review.showId = show.id;\n    review.rating = ratings.find(element => element.value === rating).label;\n    console.log(review);\n    context.addReviewShow(review);\n    setOpen(true);\n  };\n\n  return (\n    <Box component=\"div\" className={classes.root}>\n      <Typography component=\"h2\" variant=\"h3\">\n        Write a review\n      </Typography>\n      <Snackbar\n        className={classes.snack}\n        anchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n        open={open}\n        onClose={handleSnackClose}\n      >\n        <MuiAlert\n          severity=\"success\"\n          variant=\"filled\"\n          onClose={handleSnackClose}\n        >\n          <Typography variant=\"h4\">\n            Thank you for submitting a review\n          </Typography>\n        </MuiAlert>\n      </Snackbar>\n      <form\n        className={classes.form}\n        onSubmit={handleSubmit(onSubmit)}\n        noValidate\n      >\n        <TextField\n          className={classes.textField}\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          id=\"author\"\n          label=\"Author's name\"\n          name=\"authorName\"\n          value={userName}\n          inputProps = {\n            {readOnly: true,}\n          }\n          inputRef={register({ required: \"Author name required\" })}\n        />\n        {errors.author && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.author.message}\n          </Typography>\n        )}\n\n        <TextField\n          variant=\"outlined\"\n          margin=\"normal\"\n          required\n          fullWidth\n          name=\"text\"\n          label=\"Review text\"\n          id=\"content\"\n          autoFocus\n          multiline\n          rows={10}\n          inputRef={register({\n            required: \"No review text\",\n            minLength: { value: 10, message: \"Review is too short\" },\n          })}\n        />\n        {errors.content && (\n          <Typography variant=\"h6\" component=\"p\">\n            {errors.content.message}\n          </Typography>\n        )}\n        <TextField\n          id=\"select-rating\"\n          select\n          variant=\"outlined\"\n          label=\"Rating Select\"\n          value={rating}\n          onChange={handleRatingChange}\n          helperText=\"Don't forget your rating\"\n        >\n          {ratings.map((option) => (\n            <MenuItem key={option.value} value={option.value}>\n              {option.label}\n            </MenuItem>\n          ))}\n        </TextField>\n\n        <Box className={classes.buttons}>\n          <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Submit\n          </Button>\n          <Button\n            type=\"reset\"\n            variant=\"contained\"\n            color=\"secondary\"\n            className={classes.submit}\n            onClick={() => {\n              reset({\n                author: \"\",\n                content: \"\",\n              });\n            }}\n          >\n            Reset\n          </Button>\n        </Box>\n      </form>\n    </Box>\n  );\n};\n\nexport default withRouter(ShowReviewForm);","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showReview/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateShowListPage/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/templateShowPage/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieReview/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showDetails/index.js",["261","262"],"import React, {useState} from \"react\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Paper from \"@material-ui/core/Paper\";\nimport AccessTimeIcon from \"@material-ui/icons/AccessTime\";\nimport MonetizationIcon from \"@material-ui/icons/MonetizationOn\";\nimport StarRate from \"@material-ui/icons/StarRate\";\nimport NavigationIcon from \"@material-ui/icons/Navigation\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport ShowReviews from \"../showReviews\";\n\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    flexWrap: \"wrap\",\n    listStyle: \"none\",\n    padding: theme.spacing(1.5),\n    margin: 0,\n  },\n  chip: {\n    margin: theme.spacing(0.5),\n  },\n  fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(2),\n    right: theme.spacing(2),\n  },\n}));\n\nconst ShowDetails = ( {show} ) => {\n  const classes = useStyles();\n  const [drawerOpen, setDrawerOpen] = useState(false);\n\n  return (\n    <>\n      <Typography variant=\"h5\" component=\"h3\">\n        Overview\n      </Typography>\n\n      <Typography variant=\"h6\" component=\"p\">\n        {show.overview}\n      </Typography>\n\n      <Paper component=\"ul\" className={classes.root}>\n        <li>\n          <Chip label=\"Genres\" className={classes.chip} color=\"primary\" />\n        </li>\n        {show.genres.map((g) => (\n          <li key={g.name}>\n            <Chip label={g.name} className={classes.chip} />\n          </li>\n        ))}\n      </Paper>\n      <Paper component=\"ul\" className={classes.root}>\n        <Chip\n          icon={<StarRate />}\n          label={`${show.vote_average} (${show.vote_count}`}\n        />\n        <Chip label={`Released: ${show.first_air_date}`} />\n      </Paper>\n      <Paper component=\"ul\" className={classes.root}>\n        <li>\n          <Chip label=\"Production Countries\" className={classes.chip} color=\"primary\" />\n        </li>\n        {show.production_countries.map((g) => (\n          <li key={g.name}>\n            <Chip label={g.name} className={classes.chip} />\n          </li>\n        ))}\n      </Paper>\n      <Fab\n        color=\"secondary\"\n        variant=\"extended\"\n        onClick={() => setDrawerOpen(true)}\n        className={classes.fab}\n      >\n        <NavigationIcon />\n        Reviews\n      </Fab>\n      <Drawer anchor=\"top\" open={drawerOpen} onClose={() => setDrawerOpen(false)}>\n        <ShowReviews show={show} />\n      </Drawer>\n      </>\n  );\n};\nexport default  ShowDetails ;","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/headerMovieList/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieReviews/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/filterMoviesCard/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieList/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/headerMovie/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showList/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/headerShowList/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/filterShowsCard/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showReviews/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showHeader/index.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/util.js",[],"/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/movieCard/index.js",["263","264","265","266","267"],"import React, {useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport PlaylistAddCheckIcon from \"@material-ui/icons/PlaylistAddCheck\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport img from '../../images/film-poster-placeholder.png'\nimport {Link} from \"react-router-dom\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { AuthContext } from \"../../contexts/authContext\";\n\nconst useStyles = makeStyles({\n    card: {maxWidth: 345},\n    media: {height: 500},\n    avatar: {\n        backgroundColor: \"rgb(255, 0, 0)\",\n    },\n});\n\nexport default function MovieCard({ movie, action }) {\n  const classes = useStyles();\n  const { favorites, addToFavorites } = useContext(AuthContext);\n  const { wishlist, addToWishlist} = useContext(AuthContext);\n\n  if(favorites.find(element => element.id === movie.id)){\n    movie.favorite = true;\n  } else {\n    movie.favorite = false;\n  }\n\n  if (wishlist.find((element) => element.id === movie.id)){\n    movie.wishlist = true;\n  } else {\n    movie.wishlist = false;\n  }\n\n  const handleAddToFavorite = (e) => {\n    e.preventDefault();\n    addToFavorites(movie);\n  };\n\n  const handleAddToWishlist = (e) => {\n    e.preventDefault();\n    addToWishlist(movie);\n  }\n\n    return(\n        <Card className={classes.card}>\n        <CardHeader\n        className = {classes.header}\n        avatar = {\n          movie.favorite ? (\n            <Avatar className = {classes.avatar}>\n              <FavoriteIcon />\n            </Avatar>\n          ) : movie.wishlist ? ( \n          <Avatar className = {classes.avatar}>\n            <PlaylistAddCheckIcon/>\n          </Avatar>\n          ) : null\n        }\n        title = {\n          <Link\n            to={{\n              pathname: `/movies/${movie.id}`,\n            }}\n            style={{textDecoration: \"none\", color: \"black\"}}\n          >\n            <Typography variant=\"h5\">\n              {movie.title}{\"\"}\n            </Typography>\n          </Link>\n        }\n        />\n        <CardMedia\n          className={classes.media}\n          image={\n            movie.poster_path\n              ? `https://image.tmdb.org/t/p/w500/${movie.poster_path}`\n              : img\n          }\n        />\n        <CardContent>\n          <Grid container>\n            <Grid item xs = {1}/>\n            <Grid item xs={6}>\n              <Typography variant=\"h6\" component=\"p\">\n                <CalendarIcon fontSize=\"small\" />\n                {movie.release_date}\n              </Typography>\n              <Typography variant=\"h6\" component=\"p\">\n                <StarRateIcon fontSize=\"small\" />\n                {\"  \"} {movie.vote_average}{\" \"}\n              </Typography>\n            </Grid>\n            <Grid item xs = {1}/>\n            <Grid item xs = {4}>\n            <CardActions disableSpacing>\n              {action(movie)}\n            </CardActions>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    );\n}","/Users/mustafemohamoud/Desktop/WebAppDev2-Assignment2/MoviesApp React/src/components/showCard/index.js",["268","269","270","271"],"import React, {useContext} from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport CardHeader from \"@material-ui/core/CardHeader\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\nimport CalendarIcon from \"@material-ui/icons/CalendarTodayTwoTone\";\nimport StarRateIcon from \"@material-ui/icons/StarRate\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport img from '../../images/film-poster-placeholder.png';\nimport {Link} from \"react-router-dom\";\nimport { MoviesContext } from \"../../contexts/moviesContext\";\nimport { AuthContext } from \"../../contexts/authContext\";\n\nconst useStyles = makeStyles({\n  card: {maxWidth: 345},\n  media: {height: 500},\n  avatar: {\n      backgroundColor: \"rgb(255, 0, 0)\",\n  },\n});\n\nexport default function ShowCard({ show, action }) {\n  const classes = useStyles();\n  const { showFavorites, addToShowFavorites } = useContext(AuthContext);\n\n  if (showFavorites.find((element) => element.id === show.id)) {\n    show.favorite = true;\n  } else {\n    show.favorite = false\n  }\n\n  const handleAddToFavorite = (e) => {\n    e.preventDefault();\n    addToShowFavorites(show);\n  };\n\n  return (\n    <Card className={classes.card}>\n      <CardHeader \n      className={classes.header}\n      avatar={\n        show.favorite ? (\n          <Avatar className = {classes.avatar}>\n            <FavoriteIcon />\n          </Avatar>\n        ) : null\n      } \n      title={\n        <Link\n          to={{\n            pathname: `/tv/popular/${show.id}`,\n          }}\n          style={{textDecoration: \"none\", color: \"black\"}}\n        >\n          <Typography variant=\"h5\">\n          {show.name}{\"\"}\n        </Typography>\n      </Link>\n      } \n      />\n      <CardMedia\n        className={classes.media}\n        image={\n          show.poster_path\n            ? `https://image.tmdb.org/t/p/w500/${show.poster_path}`\n            : img\n        }\n      />\n      <CardContent>\n        <Grid container>\n          <Grid item xs = {1}/>\n          <Grid item xs={6}>\n            <Typography variant=\"h6\" component=\"p\">\n              <CalendarIcon fontSize=\"small\" />\n              {show.first_air_date}{\"\"}\n            </Typography>\n            <Typography variant=\"h6\" component=\"p\">\n              <StarRateIcon fontSize=\"small\" />\n              {\"  \"}{show.vote_average}{\" \"}\n            </Typography>\n          </Grid>\n          <Grid item xs={1}/>\n          <Grid item xs={4}>\n            <CardActions disableSpacing>\n              {action(show)}\n            </CardActions>\n          </Grid>\n          <Grid item xs={1}/>\n        </Grid>\n      </CardContent>\n    </Card>\n  );\n}",{"ruleId":"272","severity":1,"message":"273","line":3,"column":50,"nodeType":"274","messageId":"275","endLine":3,"endColumn":54},{"ruleId":"276","replacedBy":"277"},{"ruleId":"278","replacedBy":"279"},{"ruleId":"272","severity":1,"message":"280","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":16},{"ruleId":"272","severity":1,"message":"281","line":23,"column":9,"nodeType":"274","messageId":"275","endLine":23,"endColumn":23},{"ruleId":"272","severity":1,"message":"282","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":23},{"ruleId":"272","severity":1,"message":"283","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":20},{"ruleId":"272","severity":1,"message":"284","line":6,"column":10,"nodeType":"274","messageId":"275","endLine":6,"endColumn":18},{"ruleId":"272","severity":1,"message":"285","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":15},{"ruleId":"272","severity":1,"message":"286","line":23,"column":9,"nodeType":"274","messageId":"275","endLine":23,"endColumn":22},{"ruleId":"272","severity":1,"message":"281","line":23,"column":9,"nodeType":"274","messageId":"275","endLine":23,"endColumn":23},{"ruleId":"272","severity":1,"message":"282","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":23},{"ruleId":"272","severity":1,"message":"283","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":20},{"ruleId":"272","severity":1,"message":"287","line":6,"column":10,"nodeType":"274","messageId":"275","endLine":6,"endColumn":17},{"ruleId":"272","severity":1,"message":"285","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":15},{"ruleId":"272","severity":1,"message":"273","line":4,"column":10,"nodeType":"274","messageId":"275","endLine":4,"endColumn":14},{"ruleId":"272","severity":1,"message":"282","line":3,"column":10,"nodeType":"274","messageId":"275","endLine":3,"endColumn":23},{"ruleId":"272","severity":1,"message":"283","line":5,"column":10,"nodeType":"274","messageId":"275","endLine":5,"endColumn":20},{"ruleId":"272","severity":1,"message":"284","line":6,"column":10,"nodeType":"274","messageId":"275","endLine":6,"endColumn":18},{"ruleId":"272","severity":1,"message":"285","line":7,"column":8,"nodeType":"274","messageId":"275","endLine":7,"endColumn":15},{"ruleId":"272","severity":1,"message":"288","line":14,"column":10,"nodeType":"274","messageId":"275","endLine":14,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":12,"column":10,"nodeType":"274","messageId":"275","endLine":12,"endColumn":14},{"ruleId":"272","severity":1,"message":"289","line":11,"column":10,"nodeType":"274","messageId":"275","endLine":11,"endColumn":20},{"ruleId":"272","severity":1,"message":"282","line":8,"column":10,"nodeType":"274","messageId":"275","endLine":8,"endColumn":23},{"ruleId":"272","severity":1,"message":"282","line":8,"column":10,"nodeType":"274","messageId":"275","endLine":8,"endColumn":23},{"ruleId":"272","severity":1,"message":"290","line":4,"column":8,"nodeType":"274","messageId":"275","endLine":4,"endColumn":22},{"ruleId":"272","severity":1,"message":"291","line":5,"column":8,"nodeType":"274","messageId":"275","endLine":5,"endColumn":24},{"ruleId":"272","severity":1,"message":"292","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"293","line":14,"column":8,"nodeType":"274","messageId":"275","endLine":14,"endColumn":18},{"ruleId":"272","severity":1,"message":"282","line":19,"column":10,"nodeType":"274","messageId":"275","endLine":19,"endColumn":23},{"ruleId":"272","severity":1,"message":"294","line":47,"column":9,"nodeType":"274","messageId":"275","endLine":47,"endColumn":28},{"ruleId":"272","severity":1,"message":"295","line":52,"column":9,"nodeType":"274","messageId":"275","endLine":52,"endColumn":28},{"ruleId":"272","severity":1,"message":"292","line":8,"column":8,"nodeType":"274","messageId":"275","endLine":8,"endColumn":14},{"ruleId":"272","severity":1,"message":"293","line":13,"column":8,"nodeType":"274","messageId":"275","endLine":13,"endColumn":18},{"ruleId":"272","severity":1,"message":"282","line":18,"column":10,"nodeType":"274","messageId":"275","endLine":18,"endColumn":23},{"ruleId":"272","severity":1,"message":"294","line":39,"column":9,"nodeType":"274","messageId":"275","endLine":39,"endColumn":28},"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","no-native-reassign",["296"],"no-negated-in-lhs",["297"],"'useMovie' is defined but never used.","'addToFavorites' is assigned a value but never used.","'MoviesContext' is defined but never used.","'useQueries' is defined but never used.","'getMovie' is defined but never used.","'Spinner' is defined but never used.","'addToWishlist' is assigned a value but never used.","'getShow' is defined but never used.","'authToken' is assigned a value but never used.","'MovieSharp' is defined but never used.","'AccessTimeIcon' is defined but never used.","'MonetizationIcon' is defined but never used.","'Button' is defined but never used.","'IconButton' is defined but never used.","'handleAddToFavorite' is assigned a value but never used.","'handleAddToWishlist' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
